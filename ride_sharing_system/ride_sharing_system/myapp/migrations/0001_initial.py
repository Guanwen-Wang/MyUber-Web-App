# Generated by Django 2.1.5 on 2019-02-06 15:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_driver', models.BooleanField(default=False)),
                ('full_name', models.CharField(blank=True, help_text='full name', max_length=200, null=True)),
                ('vehicle_type', models.CharField(blank=True, help_text='vehicle type', max_length=200, null=True)),
                ('license_num', models.CharField(blank=True, help_text='Licence Number', max_length=200, null=True)),
                ('plate_num', models.CharField(blank=True, help_text='Plate Number', max_length=200, null=True)),
                ('max_passenger', models.IntegerField(blank=True, help_text='max passenger number', null=True)),
                ('special_vehicle_info', models.TextField(blank=True, help_text='special vehicle information', max_length=1000, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, help_text='Unique ID for the request', primary_key=True, serialize=False)),
                ('destination', models.CharField(help_text='Destination', max_length=200, null=True)),
                ('arrival_time', models.DateTimeField(help_text='form:year-month-day HH:YY', null=True)),
                ('passenger_number', models.IntegerField(help_text='1-6 people', null=True)),
                ('own_pass_num', models.IntegerField(blank=True, help_text='1-6 people', null=True)),
                ('is_shared', models.BooleanField(default=False)),
                ('special_request', models.TextField(blank=True, default=None, help_text='Other requests', max_length=1000, null=True)),
                ('special_vehicle_type', models.CharField(blank=True, default=None, help_text='Destination', max_length=200, null=True)),
                ('status', models.CharField(choices=[('open', 'open'), ('confirmed', 'confirmed'), ('completed', 'completed')], default='open', help_text='request status', max_length=10)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='driver', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('party_id', models.UUIDField(auto_created=True, default=uuid.uuid4, help_text='Unique ID for the party', primary_key=True, serialize=False)),
                ('share_pass_num', models.IntegerField(help_text='sharing people', null=True)),
                ('sharer_name', models.CharField(help_text='share_name', max_length=200, null=True)),
                ('request', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.Order')),
                ('sharer_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sharer_person', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
